# Customer Management System (CMS)

It is a web-based application to manage customer records. The application 
facilitates the addition, viewing, updating, and deletion of customer details.

## Configuration
For backend run these commands in your terminal:
1. python -m venv venv (Create virtual environment for your project)
2. .\venv\Scripts\activate (To activate virtual environment)
3. pip install Flask Flask-SQLAlchemy psycopg2-binary pytest pytest-flask (Install requirements)
4. py run.py (To run backend project)
5. pytest tests (To run pytest for unit testing)


## Project Structure:
/CMS
  /backend
    /app
      __init__.py
      models.py
      routes.py
    /tests
      __init__.py
      test_all.py
    config.py
    run.py
  /venv


Frontend
## Configuration
For frontend run these commands in your terminal:
1. npm install (To install all dependencies)
2. npm start (To start frontend project)

## Project Structure:
/cms
 /src
  /Components
   /AddCustomer.jsx
   /CustomerListing.jsx
   /DeleteModal.jsx
   /EditModal.jsx
   /ViewCustomer.jsx
 /App.css
 /App.js
 /package.json

1. Add Customer: To add customer record.
2. Customer Listing: To list all customers.
3. Delete Customer: To delete customer.
4. Edit Customer: To edit customer.
5. View Customer: To view single customer.
6. Bootstrap is used for designing.
7. react-toastify is used to notify user for their specific functionality response.
8. Component based architecture is used for development.
